repoURLGit: "'{{.metadata.annotations.addons_repo_url}}'"
repoURLGitRevision: HEAD
repoURLGitBasePath: "**"
repoURLValues: "'{{.metadata.annotations.addons_repo_url}}'"
repoURLValuesRevision: HEAD
repoURLValuesBasePath: ""
project: default
namespace: argocd
useSelector: false
applicationsets:
  argocd:
    enabled: true
    selector:
      matchExpressions:
        - key: enable_argocd
          operator: In
          values: ['true']
  aws_load_balancer_controller:
    enabled: true
    selector:
      matchExpressions:
        - key: enable_aws_load_balancer_controller
          operator: In
          values: ['true']
    values:
      vpcId: '{{.metadata.annotations.aws_vpc_id}}'
      clusterName: '{{.metadata.annotations.aws_cluster_name}}'
      serviceAccount:
        name: '{{.metadata.annotations.aws_load_balancer_controller_service_account}}'
        annotations:
          eks.amazonaws.com/role-arn: '{{.metadata.annotations.aws_load_balancer_controller_iam_role_arn}}'
    ignoreDifferences:
        - kind: Secret
          name: aws-load-balancer-tls
          jsonPointers: [/data]
        - group: admissionregistration.k8s.io
          kind: MutatingWebhookConfiguration
          jqPathExpressions: ['.webhooks[].clientConfig.caBundle']
        - group: admissionregistration.k8s.io
          kind: ValidatingWebhookConfiguration
          jqPathExpressions: ['.webhooks[].clientConfig.caBundle']
  gatekeeper:
    enabled: true
    selector:
      matchExpressions:
        - key: enable_gatekeeper
          operator: In
          values: ['true']
  metrics_server:
    enabled: true
    selector:
      matchExpressions:
        - key: enable_metrics_serve
          operator: In
          values: ['true']

