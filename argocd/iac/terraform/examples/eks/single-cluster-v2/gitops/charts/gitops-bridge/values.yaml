syncPolicyAppSet:
  preserveResourcesOnDeletion: true
goTemplate: true
goTemplateOptions: ["missingkey=error"]
stackPathPrefix: 'stack-k8sv'
stackPath: '-addons{{- $tenant := default dict (index .tenants .metadata.labels.tenant) -}}
          {{- $cluster := index (default dict (index $tenant "clusters")) .name -}}
          {{- $env := index (default dict (index $tenant "environments")) .metadata.labels.environment -}}
          {{- if $cluster -}}
            {{ $cluster.addons_version }}
          {{- else if $env -}}
            {{ $env.addons_version }}
          {{- else if $tenant -}}
            {{ $tenant.addons_version }}
          {{- else -}}
            {{ .addons_version }}
          {{- end -}}.yaml'
stackPathConfigPrefix: 'stack-k8sv'
stackPathConfig: '-config.yaml'
repoURLGit: "'{{.metadata.annotations.addons_repo_url}}'"
repoURLGitRevision: HEAD
repoURLGitBasePath: "stacks/"
repoURLValues: "'{{.metadata.annotations.addons_repo_url}}'"
repoURLValuesRevision: HEAD
repoURLValuesBasePath: ""
project: default
namespace: argocd
useSelector: false
useStack: true
useStackChart: true
syncPolicy:
  automated:
    selfHeal: false
    allowEmpty: true
    prune: false
  retry:
    limit: -1 # number of failed sync attempt retries; unlimited number of attempts if less than 0
    backoff:
      duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
      factor: 2 # a factor to multiply the base duration after each failed retry
      maxDuration: 10m # the maximum amount of time allowed for the backoff strategy
  syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true  # Big CRDs.
valueFiles:
  - default/addons
  - environments/{{.metadata.labels.environment}}/addons
  - clusters/{{.nameNormalized}}/addons
valueFilesResources:
  - environments/{{.metadata.labels.environment}}/addons
  - clusters/{{.nameNormalized}}/addons
useValuesFilePrefix: false
valuesFilePrefix: tenants/{{.metadata.labels.tenant}}/
addons:
  argocd:
    enabled: false
    releaseName: argocd
    namespace: argocd
    chart: argo-cd
    repoUrl: https://argoproj.github.io/argo-helm
    targetRevision: "7.3.11"
    selector:
      matchExpressions:
        - key: enable_argocd
          operator: In
          values: ['true']
  aws_load_balancer_controller:
    enabled: false
    releaseName: aws-load-balancer-controller
    aws_load_balancer_controller:
    chart: aws-load-balancer-controller
    repoUrl: https://aws.github.io/eks-charts
    targetRevision: "1.7.1"
    namespace: '.metadata.annotations.aws_load_balancer_controller_namespace'
    annotationsAppSet:
      argocd.argoproj.io/sync-wave: '-1'
    selector:
      matchExpressions:
        - key: enable_aws_load_balancer_controller
          operator: In
          values: ['true']
    values:
      vpcId: '{{.metadata.annotations.aws_vpc_id}}'
      clusterName: '{{.metadata.annotations.aws_cluster_name}}'
      serviceAccount:
        name: '{{.metadata.annotations.aws_load_balancer_controller_service_account}}'
        annotations:
          eks.amazonaws.com/role-arn: '{{.metadata.annotations.aws_load_balancer_controller_iam_role_arn}}'
    ignoreDifferences:
        - kind: Secret
          name: aws-load-balancer-tls
          jsonPointers: [/data]
        - group: admissionregistration.k8s.io
          kind: MutatingWebhookConfiguration
          jqPathExpressions: ['.webhooks[].clientConfig.caBundle']
        - group: admissionregistration.k8s.io
          kind: ValidatingWebhookConfiguration
          jqPathExpressions: ['.webhooks[].clientConfig.caBundle']
  gatekeeper:
    enabled: false
    releaseName: gatekeeper
    namespace: gatekeeper-system
    chart: gatekeeper
    repoUrl: https://open-policy-agent.github.io/gatekeeper/charts
    targetRevision: "3.15.0"
    selector:
      matchExpressions:
        - key: enable_gatekeeper
          operator: In
          values: ['true']
    # resources:
    #   path: manifests/resources/gatekeeper
    resources:
      path: charts/resources/gatekeeper
      helm:
        valuesObject:
          environment: '{{.metadata.labels.environment}}'
  metrics_server:
    enabled: false
    releaseName: metrics-server
    namespace: kube-system
    metrics_server:
    chart: metrics-server
    repoUrl: https://kubernetes-sigs.github.io/metrics-server
    targetRevision: "3.12.0"
    selector:
      matchExpressions:
        - key: enable_metrics_server
          operator: In
          values: ['true']
  aws_ebs_csi_resources:
    enabled: false
    releaseName: aws-ebs-csi-classes
    chart: aws-ebs-csi-classes
    repoUrl: https://gitops-bridge-dev.github.io/gitops-bridge-helm-charts
    targetRevision: "1.0.0"
    namespace: kube-system
    selector:
      matchExpressions:
        - key: enable_aws_ebs_csi_resources
          operator: In
          values: ['true']
  karpenter:
    enabled: false
    releaseName: karpenter
    namespace: '.metadata.annotations.karpenter_namespace'
    chart: karpenter/karpenter
    repoUrl: public.ecr.aws
    targetRevision: "0.37.0"
    selector:
      matchExpressions:
        - key: enable_karpenter
          operator: In
          values: ['true']
    values:
      settings:
        clusterName: '{{.metadata.annotations.aws_cluster_name}}'
        interruptionQueue: '{{.metadata.annotations.karpenter_sqs_queue_name}}'
      serviceAccount:
        name: '{{.metadata.annotations.karpenter_service_account}}'
        annotations:
          eks.amazonaws.com/role-arn: '{{.metadata.annotations.karpenter_iam_role_arn}}'
    resources:
      path: charts/resources/karpenter
      helm:
        valuesObject:
          environment: '{{.metadata.labels.environment}}'
          clusterName: '{{.metadata.annotations.aws_cluster_name}}'
          IamRole: '{{.metadata.annotations.karpenter_node_iam_role_name}}'
          securityGroupSelectorTerms:
          - tags:
              karpenter.sh/discovery: '{{.metadata.annotations.aws_cluster_name}}'
          subnetSelectorTerms:
          - tags:
              karpenter.sh/discovery: '{{.metadata.annotations.aws_cluster_name}}'
  volcano:
    enabled: false
    releaseName: volcano
    namespace: volcano-system
    chart: volcano
    repoUrl: https://volcano-sh.github.io/helm-charts
    targetRevision: "1.9.0"
    selector:
      matchExpressions:
        - key: enable_karpenter
          operator: In
          values: ['true']
    annotationsApp:
      argocd.argoproj.io/compare-options: "ServerSideDiff=true" # required for volcano https://github.com/argoproj/argo-cd/issues/18548

