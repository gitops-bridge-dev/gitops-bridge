stackPath: '**/stack{{(.metadata.annotations.platform_stack_version | default "")}}.yaml'
repoURLGit: "'{{.metadata.annotations.addons_repo_url}}'"
repoURLGitRevision: HEAD
repoURLGitBasePath: "**"
repoURLValues: "'{{.metadata.annotations.addons_repo_url}}'"
repoURLValuesRevision: HEAD
repoURLValuesBasePath: ""
project: default
namespace: argocd
useSelector: false
syncPolicy:
  automated:
    selfHeal: false
    allowEmpty: true
    prune: false
  retry:
    limit: 100
  syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true  # Big CRDs.
valueFiles:
  - addons
  - environments/{{.metadata.labels.environment}}/addons
  - clusters/{{.nameNormalized}}/addons
  # - tenants/{{.metadata.labels.tenant | default ""}}/addons
  # - tenants/{{.metadata.labels.tenant | default ""}}/environments/{{.metadata.labels.environment}}/addons
  # - tenants/{{.metadata.labels.tenant | default ""}}/clusters/{{.nameNormalized}}/addons
valueFilesResources:
  - environments/{{.metadata.labels.environment}}/addons
  - clusters/{{.nameNormalized}}/addons
  # - tenants/{{.metadata.labels.tenant | default ""}}/addons
  # - tenants/{{.metadata.labels.tenant | default ""}}/environments/{{.metadata.labels.environment}}/addons
  # - tenants/{{.metadata.labels.tenant | default ""}}/clusters/{{.nameNormalized}}/addons
addons:
  argocd:
    enabled: true
    releaseName: argocd
    namespace: argocd
    selector:
      matchExpressions:
        - key: enable_argocd
          operator: In
          values: ['true']
  aws_load_balancer_controller:
    enabled: true
    releaseName: aws-load-balancer-controller
    namespace: '.metadata.annotations.aws_load_balancer_controller_namespace'
    selector:
      matchExpressions:
        - key: enable_aws_load_balancer_controller
          operator: In
          values: ['true']
    values:
      vpcId: '{{.metadata.annotations.aws_vpc_id}}'
      clusterName: '{{.metadata.annotations.aws_cluster_name}}'
      serviceAccount:
        name: '{{.metadata.annotations.aws_load_balancer_controller_service_account}}'
        annotations:
          eks.amazonaws.com/role-arn: '{{.metadata.annotations.aws_load_balancer_controller_iam_role_arn}}'
    ignoreDifferences:
        - kind: Secret
          name: aws-load-balancer-tls
          jsonPointers: [/data]
        - group: admissionregistration.k8s.io
          kind: MutatingWebhookConfiguration
          jqPathExpressions: ['.webhooks[].clientConfig.caBundle']
        - group: admissionregistration.k8s.io
          kind: ValidatingWebhookConfiguration
          jqPathExpressions: ['.webhooks[].clientConfig.caBundle']
  gatekeeper:
    enabled: true
    releaseName: gatekeeper
    namespace: gatekeeper-system
    selector:
      matchExpressions:
        - key: enable_gatekeeper
          operator: In
          values: ['true']
    resources:
      path: kustomize/resources/gatekeeper
  metrics_server:
    enabled: true
    releaseName: metrics-server
    namespace: kube-system
    selector:
      matchExpressions:
        - key: enable_metrics_server
          operator: In
          values: ['true']
  aws_ebs_csi_resources:
    enabled: true
    releaseName: aws-ebs-csi-classes
    namespace: kube-system
    selector:
      matchExpressions:
        - key: enable_aws_ebs_csi_resources
          operator: In
          values: ['true']
  karpenter:
    enabled: true
    releaseName: karpenter
    namespace: '.metadata.annotations.karpenter_namespace'
    selector:
      matchExpressions:
        - key: enable_karpenter
          operator: In
          values: ['true']
    values:
      settings:
        clusterName: '{{.metadata.annotations.aws_cluster_name}}'
        interruptionQueue: '{{.metadata.annotations.karpenter_sqs_queue_name}}'
      serviceAccount:
        name: '{{.metadata.annotations.karpenter_service_account}}'
        annotations:
          eks.amazonaws.com/role-arn: '{{.metadata.annotations.karpenter_iam_role_arn}}'
    resources:
      helm:
        path: charts/resources/karpenter
        valuesObject:
          clusterName: '{{.metadata.annotations.aws_cluster_name}}'
          nodeRole: '{{.metadata.annotations.karpenter_node_iam_role_name}}'


